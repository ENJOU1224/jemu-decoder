console.log('testing decoder')

import assert from 'assert'
import decode from '../build/decoder.js'

[
	[0x00000413, 'LI'],
	[0x00009117, 'AUIPC'],
	[0xffc10113, 'ADDI'],
	[0x054000ef, 'JAL'],
	[0x017d85b7, 'LUI'],
	[0x0001c537, 'LUI'],
	[0xff010113, 'ADDI'],
	[0x20050513, 'ADDI'],
	[0x84058593, 'ADDI'],
	[0x00113423, 'SD'],
	[0x00813023, 'SD'],
	[0x058000ef, 'JAL'],
	[0x094000ef, 'JAL'],
	[0x00000417, 'AUIPC'],
	[0x1a440413, 'ADDI'],
	[0x04800513, 'LI'],
	[0x00140413, 'ADDI'],
	[0x034000ef, 'JAL'],
	[0x00044503, 'LBU'],
	[0xfe051ae3, 'BNEZ'],
	[0x00813083, 'LD'],
	[0x00013403, 'LD'],
	[0x01010113, 'ADDI'],
	[0x00008067, 'RET'],
	[0xff010113, 'ADDI'],
	[0x00000517, 'AUIPC'],
	[0x19c50513, 'ADDI'],
	[0x00113423, 'SD'],
	[0xfa1ff0ef, 'JAL'],
	[0x0000006f, 'J'],
	[0x100007b7, 'LUI'],
	[0x00a78023, 'SB'],
	[0x00008067, 'RET'],
	[0xff010113, 'ADDI'],
	[0x00813023, 'SD'],
	[0x00113423, 'SD'],
	[0x00058793, 'MV'],
	[0x10000437, 'LUI'],
	[0xf8300713, 'LI'],
	[0x0045159b, 'SLLIW'],
	[0x00e401a3, 'SB'],
	[0x00078513, 'MV'],
	[0x06c000ef, 'JAL'],
	[0x0ff57513, 'ZEXT'],
	[0x00a40023, 'SB'],
	[0x00813083, 'LD'],
	[0x00013403, 'LD'],
	[0x01010113, 'ADDI'],
	[0x00008067, 'RET'],
	[0x100007b7, 'LUI'],
	[0x00300713, 'LI'],
	[0x00e781a3, 'SB'],
	[0x00008067, 'RET'],
	[0x02051513, 'SLLI'],
	[0x02059593, 'SLLI'],
	[0x00008293, 'MV'],
	[0x03c000ef, 'JAL'],
	[0x0005051b, 'SEXT'],
	[0x00028067, 'JR'],
	[0x02051513, 'SLLI'],
	[0x02059593, 'SLLI'],
	[0x02055513, 'SRLI'],
	[0x0205d593, 'SRLI'],
	[0x00008293, 'MV'],
	[0x01c000ef, 'JAL'],
	[0x0005851b, 'SEXT'],
	[0x00028067, 'JR'],
	[0xfff00293, 'LI'],
	[0x0a558c63, 'BEQ'],
	[0x06054063, 'BLTZ'],
	[0x0605c663, 'BLTZ'],
	[0x00058613, 'MV'],
	[0x00050593, 'MV'],
	[0xfff00513, 'LI'],
	[0x02060c63, 'BEQZ'],
	[0x00100693, 'LI'],
	[0x00b67a63, 'BGEU'],
	[0x00c05863, 'BLEZ'],
	[0x00161613, 'SLLI'],
	[0x00169693, 'SLLI'],
	[0xfeb66ae3, 'BLTU'],
	[0x00000513, 'LI'],
	[0x00c5e663, 'BLTU'],
	[0x40c585b3, 'SUB'],
	[0x00d56533, 'OR'],
	[0x0016d693, 'SRLI'],
	[0x00165613, 'SRLI'],
	[0xfe0696e3, 'BNEZ'],
	[0x00008067, 'RET'],
	[0x00008293, 'MV'],
	[0xfb5ff0ef, 'JAL'],
	[0x00058513, 'MV'],
	[0x00028067, 'JR'],
	[0x40a00533, 'NEG'],
	[0x00b04863, 'BGTZ'],
	[0x40b005b3, 'NEG'],
	[0xf9dff06f, 'J'],
	[0x40b005b3, 'NEG'],
	[0x00008293, 'MV'],
	[0xf91ff0ef, 'JAL'],
	[0x40a00533, 'NEG'],
	[0x00028067, 'JR'],
	[0x00008293, 'MV'],
	[0x0005ca63, 'BLTZ'],
	[0x00054c63, 'BLTZ'],
	[0xf79ff0ef, 'JAL'],
	[0x00058513, 'MV'],
	[0x00028067, 'JR'],
	[0x40b005b3, 'NEG'],
	[0xfe0558e3, 'BGEZ'],
	[0x40a00533, 'NEG'],
	[0xf61ff0ef, 'JAL'],
	[0x40b00533, 'NEG'],
	[0x00028067, 'JR'],
	[0x01f29293, 'SLLI'],
	[0xf45514e3, 'BNE'],
	[0x00008067, 'RET'],
].forEach(([code, inst]) => {
	const result = decode(code)
	console.log(
		code.toString(16).padStart(8, '0'),
		inst.padEnd(8, ' '),
		result.padEnd(8, ' '),
		inst === result ? 'pass' : 'FAILED !!!!!!!!!!'
	)
})
